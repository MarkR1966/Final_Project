{"ast":null,"code":"\"use strict\";\n/*@__PURE__*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar subscribeToArray_1 = /*@__PURE__*/require(\"./subscribeToArray\");\n\nvar subscribeToPromise_1 = /*@__PURE__*/require(\"./subscribeToPromise\");\n\nvar subscribeToIterable_1 = /*@__PURE__*/require(\"./subscribeToIterable\");\n\nvar subscribeToObservable_1 = /*@__PURE__*/require(\"./subscribeToObservable\");\n\nvar isArrayLike_1 = /*@__PURE__*/require(\"./isArrayLike\");\n\nvar isPromise_1 = /*@__PURE__*/require(\"./isPromise\");\n\nvar isObject_1 = /*@__PURE__*/require(\"./isObject\");\n\nvar iterator_1 = /*@__PURE__*/require(\"../symbol/iterator\");\n\nvar observable_1 = /*@__PURE__*/require(\"../symbol/observable\");\n\nexports.subscribeTo = function (result) {\n  if (!!result && typeof result[observable_1.observable] === 'function') {\n    return subscribeToObservable_1.subscribeToObservable(result);\n  } else if (isArrayLike_1.isArrayLike(result)) {\n    return subscribeToArray_1.subscribeToArray(result);\n  } else if (isPromise_1.isPromise(result)) {\n    return subscribeToPromise_1.subscribeToPromise(result);\n  } else if (!!result && typeof result[iterator_1.iterator] === 'function') {\n    return subscribeToIterable_1.subscribeToIterable(result);\n  } else {\n    var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n    var msg = \"You provided \" + value + \" where a stream was expected.\" + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}